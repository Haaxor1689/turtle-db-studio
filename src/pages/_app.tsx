import type { AppProps } from 'next/app';
import { type AppType } from 'next/app';
import { type Session } from 'next-auth';
import { SessionProvider } from 'next-auth/react';
import { GlobalStyles, ThemeProvider } from '@mui/system';
import localFont from '@next/font/local';
import Head from 'next/head';
import type { NextPage } from 'next';

import { trpc } from '../utils/trpc';
import Layout from '../components/Layout';
import Theme from '../utils/theme';

export type ExtendedPageProps = {
	centered?: boolean;
	rank?: number;
	expandable?: boolean;
	noBreadcrumbs?: boolean;
};

export type ExtendedNextPage = NextPage & ExtendedPageProps;

type ExtendedAppProps = AppProps & {
	Component: ExtendedNextPage;
};

const din = localFont({
	src: '../assets/DINPro-Regular.otf',
	variable: '--din-font'
});

const MyApp: AppType<{ session: Session | null }> = ({
	Component,
	pageProps: { session, ...pageProps }
}: ExtendedAppProps) => (
	<>
		<Head>
			<title>Turtle WoW Dev</title>
			<meta name="description" content="Generated by create-t3-app" />
			<link rel="icon" href="/favicon.ico" />
		</Head>
		<SessionProvider session={session}>
			<ThemeProvider theme={Theme}>
				<GlobalStyles
					styles={{
						// Box model baseline
						'*, *::before, *::after': {
							margin: 0,
							padding: 0,
							boxSizing: 'border-box'
						},
						'html, body, #__next': {
							height: '100vh'
						},
						'#__next': {
							width: '100%',
							height: '100vh',
							display: 'flex',
							flexDirection: 'column',
							overflowX: 'auto',
							backgroundColor: '#100d0c'
						},
						// Text style baseline
						':not(svg, svg *)': {
							color: 'white',
							...din.style,
							fontStyle: 'normal',
							fontWeight: 400,
							fontSize: 16,
							lineHeight: '26px'
						},
						// Focus style reset
						'*:focus': {
							outline: 'none'
						}
					}}
				/>
				<Layout
					centered={Component.centered}
					rank={Component.rank}
					noBreadcrumbs={Component.noBreadcrumbs}
					expandable={Component.expandable}
				>
					<Component {...pageProps} />
				</Layout>
			</ThemeProvider>
		</SessionProvider>
	</>
);

export default trpc.withTRPC(MyApp);
